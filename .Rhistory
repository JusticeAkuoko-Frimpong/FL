healthcare_dataset <- read.csv("C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/FinalProject625/data/healthcare_dataset.csv")
View(healthcare_dataset)
View(healthcare_dataset)
library(readr)
healthcare_dataset <- read_csv("C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/FinalProject625/data/healthcare_dataset.csv")
View(healthcare_dataset)
healthcare_dataset$length.of.stay = full_data$`Discharge Date` - full_data$`Date of Admission` + 1
healthcare_dataset$length.of.stay = healthcare_dataset$`Discharge Date` - healthcare_dataset$`Date of Admission` + 1
View(healthcare_dataset)
healthcare_dataset$length.of.stay = as.numeric(healthcare_dataset$`Discharge Date` - healthcare_dataset$`Date of Admission` + 1)
View(healthcare_dataset)
UnitedHealthcare = subset(full_data, `Insurance Provider` == "UnitedHealthcare")
UnitedHealthcare = subset(healthcare_dataset, `Insurance Provider` == "UnitedHealthcare")
Aetna = subset(healthcare_dataset, `Insurance Provider` == "Aetna")
Cigna = subset(healthcare_dataset, `Insurance Provider` == "Cigna")
Medicare = subset(healthcare_dataset, `Insurance Provider` == "Medicare")
Blue.cross = subset(healthcare_dataset, `Insurance Provider` == "Blue Cross")
write.csv(UnitedHealthcare, file = "C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/UnitedHealthcare.csv", row.names = FALSE)
write.csv(Aetna, file = "C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/Aetna.csv", row.names = FALSE)
write.csv(Cigna, file = "C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/Cigna.csv", row.names = FALSE)
write.csv(Blue.cross, file = "C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/Blue.cross.csv", row.names = FALSE)
write.csv(Medicare, file = "C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/Medicare.csv", row.names = FALSE)
write.csv(healthcare_dataset, file = "C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/healthcare_dataset.csv", row.names = FALSE)
devtools::install_github("JusticeAkuoko-Frimpong/FL")
data(healthcare_dataset)
data(healthcare_dataset)
x = devtools::install_github("JusticeAkuoko-Frimpong/FL")
data(healthcare_dataset)
library(readr)
Aetna <- read_csv("data/Aetna.csv")
View(Aetna)
devtools::install_github("JusticeAkuoko-Frimpong/FL")
data(Aetna)
devtools::use_data()
FL::UnitedHealthcare
x = FL::UnitedHealthcare
View(x)
x = as.data.frame(data(Aetna))
x = data(Aetna.csv)
data. frame(x=unlist(data(Aetna)))
data.frame(x=unlist(data(Aetna)))
x = data. frame(x=unlist(df))
x = data.frame(x=unlist(df))
x = as.data.frame(x=unlist(df))
unlist(Aetna)
x = unlist(Aetna)
x = as.data.frame(x)
View(Aetna)
library(readr)
Aetna <- read_csv("data/Aetna.csv")
View(Aetna)
View(Aetna)
data(Aetna)
library(readr)
Aetna <- read_csv("data/Aetna.csv")
View(Aetna)
setwd("C:/Users/mkaye/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data")
save(Aetna, file = "Aetna2.RData")
data(Aetna2)
data(Aetna2.Rdata)
data(Aetna2.RData)
load("C:/Users/mkaye/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/Aetna2.RData")
data(Aetna2)
data(Aetna)
data(Aetna2)
data(Aetna.csv)
data(Aetna)
data(Aetna)
data(Aetna.csv)
data(Aetna)
data(Aetna.csv)
data(Aetna)
data(Aetna2)
library(readr)
UnitedHealthcare <- read_csv("data/UnitedHealthcare.csv")
View(UnitedHealthcare)
library(readr)
Medicare <- read_csv("data/Medicare.csv")
View(Medicare)
library(readr)
Blue_cross <- read_csv("data/Blue.cross.csv")
View(Blue_cross)
library(readr)
Cigna <- read_csv("data/Cigna.csv")
View(Cigna)
library(readr)
healthcare_dataset <- read_csv("data/healthcare_dataset.csv")
View(healthcare_dataset)
save(Aetna, file = "Aetna.RData")
setwd("C:/Users/mkaye/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data")
save(Aetna, file = "Aetna.RData")
save(Blue.cross, file = "Blue.cross.RData")
save(Blue_cross, file = "Blue.cross.RData")
save(Cigna, file = "Cigna.RData")
save(UnitedHealthcare, file = "UnitedHealthcare.RData")
save(Medicare, file = "Medicare.RData")
save(healthcare_dataset, file = "healthcare_dataset.RData")
data(Aetna)
data(Aetna)
FL_combine = function(summaries) {
# combine each summary from the local servers  by adding
combined_xtx = Reduce("+", lapply(summaries, function(summary) summary$xtx))
combined_xty = Reduce("+", lapply(summaries, function(summary) summary$xty))
combined_yty = Reduce("+", lapply(summaries, function(summary) summary$yty))
combined_n = sum(sapply(summaries, function(summary) summary$n))
p = dim(combined_xtx)[1]
return(list(xtx = combined_xtx, xty = combined_xty, yty = combined_yty, n = combined_n))
}
library(FL)
library(FL)
data("Aetna")
data(Aetna)
force(Aetna)
data(Aetna)
load("C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/Aetna.RData")
load("C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/Blue.cross.RData")
load("C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/Cigna.RData")
load("C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/healthcare_dataset.RData")
load("C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/Medicare.RData")
load("C:/Users/Michael/Dropbox (University of Michigan)/Biostat - Semester 3/BIOSTAT 625/Lecture Notes/FL/data/UnitedHealthcare.RData")
Aetna.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Aetna)
United.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, UnitedHealthcare)
Bluecross.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Blue.cross)
View(Aetna)
Aetna.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Aetna)
United.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, UnitedHealthcare)
Bluecross.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Blue.cross)
View(Blue_cross)
Bluecross.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Blue.cross)
Cigna.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Cigna)
Medicare.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Medicare)
Bluecross.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Blue_cross)
##output below will be Aetna
FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Aetna)
combine.sum = FL_combine(list(Aetna.Sum, United.Sum, Cigna.Sum, Medicare.Sum, Bluecross.Sum))
FL(combine.sum)
Aetna.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Aetna)
United.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, UnitedHealthcare)
Bluecross.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Blue_cross)
Cigna.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Cigna)
Medicare.Sum = FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Medicare)
##output below will be Aetna
FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Aetna)
combine.sum = FL_combine(list(Aetna.Sum, United.Sum, Cigna.Sum, Medicare.Sum, Bluecross.Sum))
FL(combine.sum)
oracle = lm(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, data = full_data)
oracle = lm(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, data = healthcare_dataset)
oraclesum = summary(oracle)
all.equal(unname(coef(oracle)),FL$Estimate)
oracle = lm(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, data = healthcare_dataset)
oraclesum = summary(oracle)
all.equal(unname(coef(oracle)),FL$Estimate)
all.equal(unname(oraclesum$coefficients[, "Std. Error"]),FL$Std..Error)
all.equal(unname(oraclesum$coefficients[, "t value"]),FL$t.value)
all.equal(unname(oraclesum$coefficients[, "Pr(>|t|)"]),FL$p.value)
FL = FL(combine.sum)
FL
oracle = lm(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, data = healthcare_dataset)
oraclesum = summary(oracle)
all.equal(unname(coef(oracle)),FL$Estimate)
all.equal(unname(oraclesum$coefficients[, "Std. Error"]),FL$Std..Error)
all.equal(unname(oraclesum$coefficients[, "t value"]),FL$t.value)
all.equal(unname(oraclesum$coefficients[, "Pr(>|t|)"]),FL$p.value)
data(Aetna)
devtools::install_github("JusticeAkuoko-Frimpong/FL")
Aetna.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
library(FL)
Aetna.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
Aetna.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
United.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, UnitedHealthcare)
Bluecross.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Blue_cross)
Cigna.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Cigna)
Medicare.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Medicare)
##output below will be Aetna
FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Aetna)
combine.sum = FL_combine(list(Aetna.Sum, United.Sum, Cigna.Sum, Medicare.Sum, Bluecross.Sum))
library(FL)
data(Aetna)
data(Blue.cross)
data(Cigna)
data(healthcare_dataset)
data(Medicare)
data(UnitedHealthcare)
Aetna.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
United.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, UnitedHealthcare)
Bluecross.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Blue_cross)
Cigna.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Cigna)
Medicare.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Medicare)
##output below will be Aetna
FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Aetna)
combine.sum = FL_combine(list(Aetna.Sum, United.Sum, Cigna.Sum, Medicare.Sum, Bluecross.Sum))
FL = FL(combine.sum)
FL
oracle = lm(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, data = healthcare_dataset)
oraclesum = summary(oracle)
all.equal(unname(coef(oracle)),FL$Estimate)
all.equal(unname(oraclesum$coefficients[, "Std. Error"]),FL$Std..Error)
all.equal(unname(oraclesum$coefficients[, "t value"]),FL$t.value)
all.equal(unname(oraclesum$coefficients[, "Pr(>|t|)"]),FL$p.value)
##output below will be Aetna
FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Aetna)
combine.sum = FL_combine(list(Aetna.Sum, United.Sum, Cigna.Sum, Medicare.Sum, Bluecross.Sum))
FL = FL(combine.sum)
FL
oracle = lm(`Billing Amount` ~ `Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, data = healthcare_dataset)
oracle = lm(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, data = healthcare_dataset)
oraclesum = summary(oracle)
all.equal(unname(coef(oracle)),FL$Estimate)
all.equal(unname(oraclesum$coefficients[, "Std. Error"]),FL$Std..Error)
all.equal(unname(oraclesum$coefficients[, "t value"]),FL$t.value)
all.equal(unname(oraclesum$coefficients[, "Pr(>|t|)"]),FL$p.value)
library(FL)
data(Aetna)
data(Blue.cross)
data(Cigna)
data(healthcare_dataset)
data(Medicare)
data(UnitedHealthcare)
force(Cigna)
force(healthcare_dataset)
force(Medicare)
force(UnitedHealthcare)
View(Cigna)
Aetna.Sum = FL_local_summary(`Billing Amount` ~ `Insurance Provider` + Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
View(Aetna)
lm(`Billing Amount` ~ `Insurance Provider` + Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
lm(`Billing Amount` ~ `Insurance Provider` + Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
lm(`Billing Amount` ~ 1 + Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
test = lm(`Billing Amount` ~ 1 + Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
summary(test)
Aetna$local = 1
Aetna.Sum = FL_local_summary(`Billing Amount` ~ local + Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
test = lm(`Billing Amount` ~ local+ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
sumamry(test)
summary(test)
formula = (`Billing Amount` ~ local+ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`)
data = Aetna
# Adjust the contrast settings to use one-hot encoding for factors
options(contrasts = c("contr.sum", "contr.poly"))
# model.matrix automatically adds an intercept
model_matrix = model.matrix(formula, data)
View(model_matrix)
# Automatically get the outcome variable name from the formula
outcome = as.character(formula(formula)[[2]])
xtx = crossprod(model_matrix)
xty = crossprod(model_matrix, data[[outcome]])
yty = crossprod(data[[outcome]])
View(xtx)
n = nrow(data)
Aetna.Sum = FL_local_summary(`Billing Amount` ~ local + Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
View(Aetna.Sum)
data = data.frame(unname(coef(oracle)))
library(FL)
data(Aetna)
data(Blue.cross)
data(Cigna)
data(healthcare_dataset)
data(Medicare)
data(UnitedHealthcare)
Aetna.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
United.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, UnitedHealthcare)
Bluecross.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Blue_cross)
Cigna.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Cigna)
Medicare.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Medicare)
##output below will be Aetna
FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Aetna)
combine.sum = FL_combine(list(Aetna.Sum, United.Sum, Cigna.Sum, Medicare.Sum, Bluecross.Sum))
FL = FL(combine.sum)
FL
oracle = lm(`Billing Amount` ~ Age + (Age^2) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, data = healthcare_dataset)
oraclesum = summary(oracle)
all.equal(unname(coef(oracle)),FL$Estimate)
all.equal(unname(oraclesum$coefficients[, "Std. Error"]),FL$Std..Error)
all.equal(unname(oraclesum$coefficients[, "t value"]),FL$t.value)
all.equal(unname(oraclesum$coefficients[, "Pr(>|t|)"]),FL$p.value)
data = data.frame(unname(coef(oracle)))
View(data)
data = data.frame(unname(coef(oracle)), FL$Estimate)
View(data)
data = data.frame(unname(coef(oracle)), FL$Estimate, unname(oraclesum$coefficients[, "Std. Error"]), FL$Std..Error,
unname(oraclesum$coefficients[, "t value"]),FL$t.value, unname(oraclesum$coefficients[, "Pr(>|t|)"])
,FL$p.value)
kable(data)
library(kable)
library(knitr)
kable(data)
View(data)
data_oracle = data.frame(unname(coef(oracle)), unname(oraclesum$coefficients[, "Std. Error"]),unname(oraclesum$coefficients[, "t value"]), unname(oraclesum$coefficients[, "Pr(>|t|)"]) )
View(data_oracle)
data_FL = data.frame(FL$Estimate, FL$Std..Error, FL$t.value, FL$p.value)
colnames(data_FL)
View(data_FL)
x = colnames(data_FL)
colnames(data_FL) = col_names
col_names = c("Estimate", "Std. Error", "t value", "p value")
colnames(data_FL) = col_names
View(data_FL)
colnames(data_oracle) = col_names
kable(data_FL)
# Apply styling to the tables
table1 <- kable_styling(data_FL, full_width = FALSE)
table2 <- kable_styling(data_oracle, full_width = FALSE)
install.packages("kableExtra")
install.packages("kableExtra")
install.packages("kableExtra")
library(kableExtra)
# Apply styling to the tables
table1 <- kable_styling(data_FL, full_width = FALSE)
# Apply styling to the tables
table1 <- kable_styling(data_FL, full_width = FALSE)
table2 <- kable_styling(data_oracle, full_width = FALSE)
# Apply styling to the tables
kable(list(data_FL, data_oracle), caption = "Side-by-Side Tables", align = "c") %>%
kable_styling(full_width = FALSE)
data_FL = round(data_FL,2)
View(data_FL)
data_oracle = round(data_oracle,2)
# Apply styling to the tables
kable(list(data_FL, data_oracle), caption = "Side-by-Side Tables", align = "c") %>%
kable_styling(full_width = FALSE) %>%
subcaption(sub = c("Table 1: Federate Learning", "Table 2: Oracle"))
library(kableExtra)
# Apply styling to the tables
kable(list(data_FL, data_oracle), caption = "Side-by-Side Tables", align = "c") %>%
kable_styling(full_width = FALSE) %>%
subcaption(sub = c("Table 1: Federate Learning", "Table 2: Oracle"))
library(kableExtra)
# Apply styling to the tables
kable(list(data_FL, data_oracle), caption = "Side-by-Side Tables", align = "c") %>%
kable_styling(full_width = FALSE) %>%
subcaption(sub = c("Table 1: Federate Learning", "Table 2: Oracle"))
# Apply styling to the tables
kable(list(data_FL, data_oracle), caption = "Side-by-Side Tables", align = "c") %>%
kable_styling(full_width = FALSE) %>%
add_subtotal_header(subtotal_text = c("Table 1: Federate Learning", "Table 2: Oracle"))
library(kable)
install.packages("kable")
library(kable)
# Apply styling to the tables
kable(list(data_FL, data_oracle), caption = "Side-by-Side Tables", align = "c") %>%
kable_styling(full_width = FALSE)
# Apply styling to the tables
kable(list(data_FL, data_oracle), caption = "Federated learning (left) vs. Oracle (right)", align = "c") %>%
kable_styling(full_width = FALSE)
library(FL)
data(Aetna)
data(Blue.cross)
data(Cigna)
data(healthcare_dataset)
data(Medicare)
data(UnitedHealthcare)
Aetna.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age*Age) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
United.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age*Age) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, UnitedHealthcare)
Bluecross.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age*Age) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Blue_cross)
Cigna.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age*Age) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Cigna)
Medicare.Sum = FL_local_summary(`Billing Amount` ~ Age + (Age*Age) + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Medicare)
##output below will be Aetna
FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Aetna)
combine.sum = FL_combine(list(Aetna.Sum, United.Sum, Cigna.Sum, Medicare.Sum, Bluecross.Sum))
FL = FL(combine.sum)
FL
View(Aetna)
View(Aetna.Sum)
Aetma.Sum
Aetna.Sum
Aetna$Agesq = Age^2
Aetna$Agesq = (Aetna$Age)^2
View(Aetna)
library(knitr)
library(kableExtra)
oracle = lm(`Billing Amount` ~ Age + Agesq + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, data = healthcare_dataset)
library(FL)
data(Aetna)
Aetna$Agesq = (Aetna$Age)^2
data(Blue.cross)
Blue_cross$Agesq = (Blue_cross$Age)^2
data(Cigna)
Cigna$Agesq = (Cigna$Age)^2
data(healthcare_dataset)
healthcare_dataset$Agesq = (healthcare_dataset$Age)^2
data(Medicare)
Medicare$Agesq = (Medicare$Age)^2
data(UnitedHealthcare)
UnitedHealthcare$Agesq = (UnitedHealthcare$Age)^2
Aetna.Sum = FL_local_summary(`Billing Amount` ~ Age + Agesq + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Aetna)
United.Sum = FL_local_summary(`Billing Amount` ~ Age + Agesq + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, UnitedHealthcare)
Bluecross.Sum = FL_local_summary(`Billing Amount` ~ Age + Agesq + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Blue_cross)
Cigna.Sum = FL_local_summary(`Billing Amount` ~ Age + Agesq + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Cigna)
Medicare.Sum = FL_local_summary(`Billing Amount` ~ Age + Agesq + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, Medicare)
##output below will be Aetna
FL_local_summary(`Billing Amount` ~ Age + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay, Aetna)
combine.sum = FL_combine(list(Aetna.Sum, United.Sum, Cigna.Sum, Medicare.Sum, Bluecross.Sum))
FL = FL(combine.sum)
FL
library(knitr)
library(kableExtra)
oracle = lm(`Billing Amount` ~ Age + Agesq + Gender + `Medical Condition` + `Admission Type` + Medication + length.of.stay + length.of.stay*`Medical Condition`, data = healthcare_dataset)
oraclesum = summary(oracle)
all.equal(unname(coef(oracle)),FL$Estimate)
all.equal(unname(oraclesum$coefficients[, "Std. Error"]),FL$Std..Error)
all.equal(unname(oraclesum$coefficients[, "t value"]),FL$t.value)
all.equal(unname(oraclesum$coefficients[, "Pr(>|t|)"]),FL$p.value)
col_names = c("Estimate", "Std. Error", "t value", "p value")
data = data.frame(unname(coef(oracle)), FL$Estimate, unname(oraclesum$coefficients[, "Std. Error"]), FL$Std..Error,
unname(oraclesum$coefficients[, "t value"]),FL$t.value, unname(oraclesum$coefficients[, "Pr(>|t|)"])
,FL$p.value)
data_oracle = data.frame(unname(coef(oracle)), unname(oraclesum$coefficients[, "Std. Error"]),unname(oraclesum$coefficients[, "t value"]), unname(oraclesum$coefficients[, "Pr(>|t|)"]) )
data_FL = data.frame(FL$Estimate, FL$Std..Error, FL$t.value, FL$p.value)
colnames(data_FL) = col_names
colnames(data_oracle) = col_names
data_FL = round(data_FL,2)
data_oracle = round(data_oracle,2)
all.equal(unname(coef(oracle)),FL$Estimate)
all.equal(unname(oraclesum$coefficients[, "Std. Error"]),FL$Std..Error)
all.equal(unname(oraclesum$coefficients[, "t value"]),FL$t.value)
all.equal(unname(oraclesum$coefficients[, "Pr(>|t|)"]),FL$p.value)
kable(list(data_FL, data_oracle), caption = "Federated learning (left) vs. Oracle (right)", align = "c") %>%
kable_styling(full_width = FALSE)
